refinement powerOfTwo long n: return n & (n-1) == 0

fn main {
	long a = 53
	
	print(runFast())
	print(runFast())
	print(runFast())
	print(runFast())
	print(runFast())
	print(runFast())
	print(runFast())
	print(runFast())
	print(runFast())
	print(runFast())
	
	print 0
	
	print(runSlow())
	print(runSlow())
	print(runSlow())
	print(runSlow())
	print(runSlow())
	print(runSlow())
	print(runSlow())
	print(runSlow())
	print(runSlow())
	print(runSlow())
	
	return 0
}

fn runFast -> long {
	long[] a = [1,2,3,4]
	long b = 3
	long c
	return (benchmark 1000000:
		c = a[b])
}
	
fn runSlow -> long {
	long[] a = [1,2,3,4]
	long b = 3
	long c
	return (benchmark 1000000:
	    if b < 4:
		    c = a[b])
}

