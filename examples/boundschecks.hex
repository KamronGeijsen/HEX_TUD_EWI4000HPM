refinement withinBounds long n: return n < 4

fn main {

	runSlow()
	runSlow()
	runSlow()
	runSlow()
	runSlow()
	runSlow()
	runSlow()
	runSlow()
	runSlow()
	runSlow()
	
	print 0

	runFast()
	runFast()
	runFast()
	runFast()
	runFast()
	runFast()
	runFast()
	runFast()
	runFast()
	runFast()
	
	return 0
}

fn runSlow {
	long[] a = [1,2,3,4]
	long b = 3
	long c

	long time = benchmark 1000000 {
		if b < a.length:
			c = a[b]
	}

	print(time, c)
}
	
fn runFast {
	long[] a = [1,2,3,4]
	withinBounds b = 3
	long c

	long time = benchmark 1000000 {
        c = a[b]
    }

	print(time, c)
}