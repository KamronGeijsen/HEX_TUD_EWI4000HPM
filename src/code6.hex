
int a = 10
+ 1
int a = (10 + 1)
int a = (10 + (1))
int a = ((10 + (1)))

int a = if i == 0: 10 else: 5

5
2 + if i == 0:{10};
print ans

(add(1, 2): inc(1))
(map(l1, l2, lambda int a -> int: {
	print("helo world")
	return a + 2
} ) )

fn add (int a, int b) -> int c: 
	c = a + b

fn add int a, int b -> int c: { c = a + b }

fn add int a, int b -> int c { c = a + b } 

fn add { 
	return ans[0] + ans[1] 
}


fn inc int { return ans[0] }
fn add int, int { 
	return ans[0] + ans[1]
}
fn add int a, int b { 
	return a + b 
}
fn add int a, int b -> int { 
	return a + b 
}
fn main -> { 
	return a + b 
}
fn main int[] a -> { 
	return a + b 
}
fn main int[] a -> int { 
	return a + b 
}

add 1 2 3

(a + b)
int c = ans * ans
for list each a:
	print(a)

for list: ans + 1
print(ans)	
	

int a = 10
+ 1;

int a = if i == 0: 10 else: 5

5
2 + if i == 0:{10};
print(ans)

(add(1, 2): inc(1))
(map(l1, l2, lambda int a -> int: {
	print("helo worl")
	return a + 2
} ) )

add 1 2 3

(1+2).hello

if a==0: b else: if a==2: b + 1 else: b + 2
if a==0: b elif a==2: b + 1 else: b + 2
if a==0: 
	if a==2: 
		b + 1 
	else: 
		b + 2 
else: b+ 2
 
if a==0:
	b
elif a==1:
	b + 1
elif a==2:
	b + 2
elif a==3:
	b + 3
else:
	b + 4
	
if a==0:
	if a==2: 
		b + 1 
	else: 
		b + 2 
elif a==1:
	if a==2: 
		b + 1
	elif a==1:
		b + 2 
	else: 
		b + 3 
elif a==2:
	if a==2: 
		b + 1
	elif a==1:
			if a==2: 
				b + 1
			elif a==1:
				b + 2 
			else: 
				b + 3 
	else: 
		b + 3 
elif a==3:
	b + 3
else:
	b + 4

if i and not 2 or not 3: 1 not is 2 else 2

int i = new int 10

class Foo {
	int a = 10
	fn bar {print a}
}

fn karatsuba_algorithm int a, int b -> int {
	int a1 = a >> 16 & 0xffff
	int a2 = a >> 00 & 0xffff
	int b1 = b >> 16 & 0xffff
	int b2 = b >> 00 & 0xffff
	
	int a1b1 = a1 * b1
	int a1a2_b1b2 = (a1 + a2) * (b1 + b2)
	int a2b2 = a2 * b2
	
	return (a1b1<<32) + (a1a2_b1b2<<16) + (a2b2<<0)
}

for 0..1:
	print ans
print "abcd"[1..2]
print "abcd"[..2]
print "abcd"[1..]
print "abcd"[1x1_0.5..2.5]
int[] a = 1..5 //should be invalid..?
int[] a = (1..5)
int[5] a = (1, 2, 3, 4, 5)
int[5] a = [1, 2, 3, 4, 5]
ans[1][2] + [2]
Foo[5] foos = Foo[5]
foos[2].bar()

auto tup = (a, b, 3, 4, 5)
tup[1] = 2

class a {
	int foo
	int bar
}

fn blabla int, int, int {
	
}
a = [1, 2]
List<int> a = [1, 2]
a.length

(int[] arr, int length) a = [1, 2]
print(a.length)

//blabla (*a, 2, 3)

for 0..10 each a:
	print a


!i
a = i &&
!i

a = i &&!
i

i++

++i

int a = ++i
int a = i++

int a = i++ + 2
int a = ++i + 2
int a = 2 + i++
int a = 2 + ++i

int(a, b, c, d) = (1, 2, 3, 4)
(a, b, c, d) = (1, 2, 3, 4)
